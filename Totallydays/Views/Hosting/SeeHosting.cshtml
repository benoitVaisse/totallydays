@model Hosting
@{
    ViewData["Title"] = "SeeHosting";
    AppUser User = await UserManager.GetUserAsync(this.User);
    int index = 0;
    int jindex = 0;
}

    <div>
        <div class="ad_title" style="background-image: url('@Url.Content("~/img/hosting/coverImage/"+Model.Cover_image)')">
            <div class="container my-5">
                <h1>@Model.Title </h1>
                <p>@Model.Resume </p>
            </div>
        </div>
        <div class="container">
            @if (Model.Active == false)
            {
                <div class="alert alert-danger" role="alert">
                    Cette Hébergement n'est pas encore activé par l'administration
                </div>
            }

            @if (Model.Published == false)
            {
                <div class="alert alert-danger" role="alert">
                    Vous n'avez pas encore publié cette hébergement
                </div>
            }
            <h2 class="my-4">@Model.Title</h2>
            <div class="row">
                <div class="col-md-8 mb-3">

                    <div>
                        <div class="carousel-image">
                            <div id="carouselCaptions" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    @foreach (Image i in Model.Images)
                                    {
                                        <li data-target="#carouselCaptions" data-slide-to="@index" @(index == 0 ? "class=\"active\"" : "" )></li>
                                        index++;

                                    }
                                </ol>
                                <div class="carousel-inner">
                                    @foreach (Image i in Model.Images)
                                    {
                                        <div class="carousel-item @(jindex == 0 ? "active":"" )">
                                            <img src="~/img/hosting/img/@Model.Hosting_id/@i.File" class="d-block w-100">
                                        </div>
                                        jindex++;
                                    }
                                </div>
                                <a class="carousel-control-prev" href="#carouselCaptions" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselCaptions" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 my-5">
                    <div class="row">
                        <div class="col-md-4 avatar mb-3">
                            @if (User.Picture != null)
                            {
                                <img src="~/img/avatar/@User.Id/@User.Picture" class="avatar avatar-middle" />
                            }
                            else
                            {
                                <img src="~/img/avatar/homme.jpg" class="avatar avatar-middle" />
                            }
                        </div>
                        <div class="col">
                            <a class="text-info" href="#">
                                <h3>@Model.User.Lastname @Model.User.Firstname</h3>
                            </a>
                            <span class="badge badge-info"> @Model.User.Hostings.Count() Annonce(s) </span>
                        </div>
                    </div>
                    @Html.Raw(User.Description != null ? User.DescriptionShow() : "")
                </div>
            </div>
            <hr />
            <div>
                <div class="my-3">
                    @Html.Raw(Model.ResumeShow());
                </div>
                <div class="my-3">
                    @Html.Raw(Model.DescriptionShow());
                </div>
            </div>
            <hr />

            <div id="bedrooms">
                <h4>Chambres</h4>
                <partial name="~/Views/Hosting/_partial/__block_bedroom.cshtml" model="@Model" />
            </div>

            <hr />
            <div class="hosting-equipment-block my-3">
                <h4>Equipements</h4>
                <div class="hosting-equipments">
                    @foreach (Hosting_Equipment he in Model.Hosting_Equipment)
                    {
                        <div> @he.Equipment.Name </div>
                    }
                </div>
            </div>

            <hr />
            <div class="coordinate-hosting" data-lat="@Model.Lat" data-lng="@Model.Lng"></div>
            <partial name="/Views/Hosting/_partial/_map_hosting.cshtml" model="@Model" />
            <hr>
            <partial name="/Views/Hosting/_partial/_hosting_comment.cshtml" model="@Model" />
            @if (User == Model.User)
            {
                <div class="booking-block">
                    <partial name="/Views/Hosting/_partial/_block_unavalaible_date.cshtml" model="@this.ViewBag.unavailable_date" />
                </div>
                <div id="modal_unavailable_date_block">
                    <partial name="/Views/Modal/MyUnavailableDateHostingModal.cshtml" model="@Model.GetMyNextUnavailableDate()" />
                </div>
            }
            else
            {
                <div class="booking-block">
                    <partial name="/Views/Hosting/_partial/_block_booking.cshtml" model="@this.ViewBag.bookingModel" />
                </div>
            }

        </div>
        
    </div>





@section Scripts{

    <script>
        $(document).ready(function () {
            let jsDateUnavailable = [
                @foreach (DateTime date in Model.getUnavailableDays())
                {
                    @:'@date.ToString("dd/MM/yyyy")',
                }
            ];
            setCalendarUnavalableDate = (dates) => {

                $("#booking_startDate, #booking_endDate").datepicker({
                    format: "dd/mm/yyyy",
                    datesDisabled: dates,
                    startDate: new Date()
                });
            }

            setCalendarUnavalableDate(jsDateUnavailable);

            let lat = +"@Model.Lat";
            let lng = +"@Model.Lng";
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 13,
                center: { lat: lat, lng: lng }
            });

            $(".coordinate-hosting").each((i, e) => {
                let lat_hosting = $(e).data("lat");
                let lng_hosting = $(e).data("lng");
                var marker = new google.maps.Marker({
                    position: { lat: lat_hosting, lng: lng_hosting },
                    map: map,
                    title: "@Model.Title"
                })
            })
        });

        addEventDatePicker = () => {

            $("#booking_startDate, #booking_endDate").on("changeDate",function (e) {

                const DAYS_TIME = 24 * 60 * 60 * 1000;
                const startDate = $("#booking_startDate td.day.active").data("date");
                const endDate = $("#booking_endDate td.day.active").data("date");
                let DateStart = new Date(startDate);
                let Dateend = new Date(endDate);
                if (DateStart instanceof Date) {
                    $("input#Start_date").val(transformDate(DateStart));
                }
                if (Dateend instanceof Date) {
                    $("input#End_date").val(transformDate(Dateend));
                }
                days = (endDate - startDate) / DAYS_TIME;
                amount = days * @Model.Price;
                if (startDate && endDate && startDate < endDate) {
                    $("#days").text(days);
                    $("#amount").text(amount);
                    $("#error").hide();
                    $("#make_booking").removeAttr("disabled");
                }
                else if(!startDate < endDate && startDate && endDate) {
                    $("#days").text("...");
                    $("#amount").text("0");
                    $("#error").show();
                    $("#make_booking").attr("disabled", "disabled");
                }
            });
        }
        addEventDatePicker();

        function transformDate(date) {
            let day = date.getDate();
            day = day.length < 2 ? "0" + day : day;
            let month = date.getMonth()+1;
            month = month.length < 2 ? "0" + month : month;
            let year = date.getFullYear();

            return [year, month, day].join("-");
        }

        $("#modal_unavailable_date").on("click", (e) => {
            let $id_modal = $(e.currentTarget).data("target");
            $($id_modal).modal('show', (e) => { })
        })

        let deleteUnavailableDate = () => {

            $(".deleteUnavailableDate").on("click", (e) => {
                $.ajax({
                    type: "POST",
                    url: $(e.currentTarget).data("href"),
                    data: {
                        __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val()
                    },
                    dataType: "json",
                    success: (result) => {
                        if (result.status == "success") {
                            let body = $("#modal_unavailable_date_block").find(".modal-body")[0];
                            $(body).html(result.view);
                            $("#booking_startDate, #booking_endDate").datepicker("destroy");
                            setCalendarUnavalableDate(result.unvavalibledate);
                            addEventDatePicker();
                        }
                    },
                    error: (err, result, message)=>{

                    }

                })
            })
        }

        deleteUnavailableDate();


    </script>
}




